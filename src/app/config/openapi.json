{
  "openapi": "3.0.0",
  "info": {
    "title": "Example API with User",
    "description": "This is an example API written in Typescript and features User",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "Local server"
    }
  ],
  "paths": {
    "/v1/users": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates a new user",
        "requestBody": {
          "description": "User information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New user record with ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Returns a user if exists",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of record that needs retrieved",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A copy of the requested user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "systems"
        ],
        "summary": "Returns success if app running",
        "responses": {
          "200": {
            "description": "A successful status code to indicate app is running",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "UserResponse": {
        "type": "object",
        "required": [
          "data",
          "message"
        ],
        "$ref": "#/components/schemas/User"
      },
      "HealthResponse": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorModel": {
        "type": "object",
        "required": [
          "message",
          "status"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "minimum": 100,
            "maximum": 600
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "errors",
          "message"
        ],
        "properties": {
          "data": {
            "type": "object"
          },
          "meta": {
            "type": "object",
            "properties": {
              "length": {
                "type": "integer"
              },
              "took": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              }
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorModel"
            }
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {},
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}